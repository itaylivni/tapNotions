// Full screen!
float x,y;
float hr,vr;
int lastPx;
int[] cur = new int[2];
bool hitBottom = false;

void setup(){
    size(500,500);

    // Create the text
    textFont(createFont("Sans",240));
    
    hr = textWidth("e")/2;
    vr = (textAscent() + textDescent()) / 2;
    noStroke();
    x = 100;
    y = 200;
    fill(0);

    text("e",x,y);

    // Create bounding box
    fill(#ffffff,0);
    stroke(255);
    rect(x,y-textAscent(),textWidth("e"),(textAscent()+textDescent()));

    cur[0] = x+(textWidth("e")/2);
    cur[1] = y+textDescent();
    
    set(cur[0],cur[1],#ff0000);


    int timer = 0;
    // Trace the outline of the "e" starting from the bottom-center
    while (hitBottom == false){
	timer++;
	if ( timer > 500 )
	    hitBottom = true;
	cur[1]--;
	loadPixels();
	color pix = get(cur[0],cur[1]);
	if ( red(pix) == 0 && blue(pix) == 0 && green(pix) == 0 )
	    hitBottom = true;
	set(cur[0],cur[1],#ff0000);
    }
    int start = cur[0];
    int px = cur[0]+(cur[1]*width);
    int test = px;
    loadPixels();
    timer = 0;
    // Crawl along the "e" until we've reached the starting point
    while (timer < 3000){
	timer++;
	// Look to the right
	if ( isBlack(get(cur[0]+1,cur[1])) )
	    cur[0]++;
	else if ( isBlack(get(cur[0]-1,cur[1])) ){ // Left
	    cur[0]--;	
	}
	else if ( isBlack(get(cur[0]+1,cur[1]-1)) ){ // Move one row up, one pixel to the right
	    cur[1]--;
	    cur[0]++;
	}
	else if ( isBlack(get(cur[0]-1,cur[1]+1)) ){ // Left bottom
	    cur[0]--;
	    cur[1]++;
	}
	else if ( isBlack(get(cur[0],cur[1]-1)) ){ // Move one row up
	    cur[1]--;
	}
	else if ( isBlack(get(cur[0]-1,cur[1]-1)) ){ // Top-left
	    cur[0]--;
	    cur[1]--;
	}
	else if ( isBlack(get(cur[0],cur[1]+1)) ){ // One row down
	    cur[1]++;
	}
	set(cur[0],cur[1],#ff0000);
    }
}
boolean isBlack(color col){
    if ( red(col) == 0 && green(col) == 0 && blue(col) == 0 )
	return true;
    else
	return false;
}
boolean sketchFullScreen(){
    return true;
}
